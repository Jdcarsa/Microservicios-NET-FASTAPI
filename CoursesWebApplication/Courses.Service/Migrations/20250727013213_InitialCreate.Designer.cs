// <auto-generated />
using System;
using Courses.Service.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Courses.Service.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250727013213_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Model.courseModel.model.CourseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 7, 27, 1, 32, 13, 214, DateTimeKind.Utc).AddTicks(6041),
                            Description = "Curso completo de programación desde cero.",
                            Duration = 40,
                            ImagePath = "images/courses/programacion.jpg",
                            Name = "Curso de Programación",
                            Price = 199.99000000000001
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(2025, 7, 27, 1, 32, 13, 214, DateTimeKind.Utc).AddTicks(6046),
                            Description = "Curso completo sobre bases de datos relacionales y no relacionales.",
                            Duration = 30,
                            ImagePath = "images/courses/bases_de_datos.png",
                            Name = "Curso de Bases de Datos",
                            Price = 149.99000000000001
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedAt = new DateTime(2025, 7, 27, 1, 32, 13, 214, DateTimeKind.Utc).AddTicks(6050),
                            Description = "Curso de desarrollo web con HTML, CSS y JavaScript.",
                            Duration = 25,
                            ImagePath = "images/courses/desarrollo_web.png",
                            Name = "Curso de Desarrollo Web",
                            Price = 99.989999999999995
                        });
                });

            modelBuilder.Entity("Application.Model.courseModel.model.PurchaseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CourseId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Price = 199.99000000000001,
                            PurchasedAt = new DateTime(2025, 7, 27, 1, 32, 13, 214, DateTimeKind.Utc).AddTicks(6247),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CourseId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Price = 149.99000000000001,
                            PurchasedAt = new DateTime(2025, 7, 27, 1, 32, 13, 214, DateTimeKind.Utc).AddTicks(6255),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("Application.Model.courseModel.model.PurchaseModel", b =>
                {
                    b.HasOne("Application.Model.courseModel.model.CourseModel", "Course")
                        .WithMany("Purchases")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Application.Model.courseModel.model.CourseModel", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
